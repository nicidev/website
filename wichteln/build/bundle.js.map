{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/pusher/eventhub.js","../../src/pusher/events.js","../../src/pusher/network.js","../../src/pusher/dicepusher.js","../../src/shared/Button.svelte","../../src/components/status/Join.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export class EventHub {\r\n\r\n    static listeners = {};\r\n    static logEvents = true;\r\n\r\n    static listen(event, handler) {\r\n        if (typeof handler !== \"function\") {\r\n            return;\r\n        }\r\n        if (typeof this.listeners[event] === \"undefined\") {\r\n            this.listeners[event] = [];\r\n        }\r\n        this.listeners[event].push(handler);\r\n    }\r\n\r\n    static trigger(event, data) {\r\n        if (typeof data !== \"object\") {\r\n            data = {\r\n                value : data\r\n            };\r\n        }\r\n        if (this.logEvents) {\r\n            console.log(\"EventHub >> \" + String(event));\r\n            console.log(data);\r\n        }\r\n        for (let handler of (this.listeners[event] || [])) {\r\n            try {\r\n                handler(Object.assign({}, data));\r\n            }catch(e) {\r\n                console.log(\"Error while handling event \" + String(event));\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n}","export const ClientEvent = Object.freeze({\r\n    DICE_INFO : Symbol(\"dice-info\"),\r\n    ROLL_DICE : Symbol(\"roll-dice\")\r\n});\r\n\r\nexport const DiceEvent = Object.freeze({\r\n    // Self entered a room\r\n    ROOM_ENTERED : Symbol(\"room-entered\"),\r\n    // Another user entered the room\r\n    ROOM_USER_JOIN : Symbol(\"room-usr-join\"),\r\n    // Another user left the room\r\n    ROOM_USER_LEAVE : Symbol(\"room-user-leave\"),\r\n});\r\n\r\nexport const NetworkEvent = Object.freeze({\r\n    NETWORK_CONNECTING : Symbol(\"network-connecting\"),\r\n    NETWORK_CONNECTED : Symbol(\"network-connected\"),\r\n    NETWORK_UNAVAILABLE : Symbol(\"network-unavailable\"),\r\n    NETWORK_FAILED : Symbol(\"network-failed\"),\r\n    NETWORK_DISCONNECTED : Symbol(\"network-disconnected\")\r\n});\r\n\r\nexport function symbolToString(symbol) {\r\n    let tmp = String(symbol);\r\n    if (tmp.indexOf(\"Symbol(\") === 0) {\r\n        tmp = tmp.substr(7, tmp.length - 8);\r\n    }\r\n    return tmp;\r\n}","import { EventHub } from \"./eventhub.js\";\r\nimport { ClientEvent, DiceEvent, NetworkEvent, symbolToString } from \"./events.js\";\r\n\r\nexport class Network {\r\n\r\n    pusherLibrary = \"https://js.pusher.com/7.0/pusher.min.js\";\r\n    client = null;\r\n    channel = null;\r\n    settings = {\r\n        authEndpoint : \"\",\r\n        appKey : \"\",\r\n        appCluster : \"eu\"\r\n    };\r\n\r\n    constructor(settings) {\r\n        for (let opt in this.settings) {\r\n            this.settings[opt] = settings[opt] ?? this.settings[opt];\r\n        }\r\n        this.injectPusher();\r\n    }\r\n\r\n    injectPusher() {\r\n        let script = document.createElement(\"script\");\r\n        script.src = this.pusherLibrary;\r\n        document.head.append(script);\r\n    }\r\n\r\n    initialize(name) {\r\n        if (!window.Pusher) {\r\n            return;\r\n        }\r\n\r\n        this.client = new Pusher(this.settings.appKey, {\r\n            cluster : this.settings.appCluster,\r\n            authEndpoint : this.settings.authEndpoint,\r\n            auth : {\r\n                params : {\r\n                    name : name\r\n                }\r\n            }\r\n        });\r\n        this.client.connection.bind(\"error\", this.handleConnectionError.bind(this));\r\n        this.client.connection.bind(\"state_change\", this.handleConnectionStateChange.bind(this));\r\n    }\r\n\r\n    connect(roomId, name) {\r\n        this.disconnect();\r\n        this.initialize(name);\r\n        roomId = (\"presence-\" + roomId).toLowerCase().replace(/[^a-z0-9-_]/g, \"\");\r\n        this.channel = this.client.subscribe(roomId);\r\n        this.channel.bind(\"pusher:subscription_succeeded\", (data) => {\r\n            EventHub.trigger(DiceEvent.ROOM_ENTERED, data);\r\n        });\r\n        this.channel.bind(\"pusher:subscription_error\", (error) => {\r\n            EventHub.trigger(NetworkEvent.NETWORK_FAILED);\r\n            this.log(\"subscription error on \" + roomId, error);\r\n        });\r\n\r\n        this.channel.bind(\"pusher:member_added\", (data) => {\r\n            EventHub.trigger(DiceEvent.ROOM_USER_JOIN, data);\r\n        });\r\n\r\n        this.channel.bind(\"pusher:member_removed\", (data) => {\r\n            EventHub.trigger(DiceEvent.ROOM_USER_LEAVE, data);\r\n        });\r\n\r\n        for (let event in ClientEvent) {\r\n            let eventName = \"client-\" + symbolToString(ClientEvent[event]);\r\n            this.channel.bind(eventName, ((event) => {\r\n                return (data, metadata) => {\r\n                    data.sender = metadata.user_id;\r\n                    EventHub.trigger(event, data);\r\n                }\r\n            })(ClientEvent[event]));\r\n            this.log(\"subscribed to \" + eventName);\r\n        }\r\n        return roomId;\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.channel) {\r\n            this.channel.unsubscribe();\r\n            this.channel.disconnect();\r\n            this.channel = null;\r\n        }\r\n        if (this.client) {\r\n            this.client.disconnect();\r\n        }\r\n    }\r\n\r\n    send(event, data, sender) {\r\n        if (!this.channel || !this.channel.subscribed) {\r\n            return;\r\n        }\r\n        let eventName = symbolToString(event);\r\n        if (eventName.indexOf(\"client-\") !== 0) {\r\n            eventName = \"client-\" + eventName;\r\n        }\r\n        this.channel.trigger(eventName, data);\r\n        if (sender) {\r\n            data.sender = sender;\r\n            EventHub.trigger(event, data);\r\n        }\r\n    }\r\n\r\n    handleConnectionStateChange(states) {\r\n        this.log(\"connection state change\", states);\r\n        switch(states.current) {\r\n            case \"connecting\":\r\n                EventHub.trigger(NetworkEvent.NETWORK_CONNECTING);\r\n                break;\r\n            case \"connected\":\r\n                EventHub.trigger(NetworkEvent.NETWORK_CONNECTED);\r\n                break;\r\n            case \"disconnected\":\r\n                EventHub.trigger(NetworkEvent.NETWORK_DISCONNECTED);\r\n                this.channel = null;\r\n                break;\r\n            case \"failed\":\r\n                EventHub.trigger(NetworkEvent.NETWORK_FAILED);\r\n                this.channel = null;\r\n                break;\r\n            case \"unavailable\":\r\n                EventHub.trigger(NetworkEvent.NETWORK_UNAVAILABLE);\r\n                this.channel = null;\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleConnectionError(error) {\r\n        this.log(\"error\", error);\r\n        if (error.error.data.code === 4004) {\r\n            // pusher connection limit reached\r\n            this.log(\"connection limit reached\");\r\n        }\r\n        EventHub.trigger(NetworkEvent.NETWORK_FAILED);\r\n    }\r\n\r\n    log(msg, o) {\r\n        console.log(\"pusher >> \" + msg);\r\n        if (o) {\r\n            console.log(o);\r\n        }\r\n    }\r\n}","import { EventHub } from \"./eventhub.js\";\r\nimport { ClientEvent, DiceEvent, NetworkEvent, symbolToString } from \"./events.js\";\r\nimport { Network } from \"./network.js\";\r\n\r\nexport class DicePusher {\r\n\r\n    room = \"\";\r\n    self = {\r\n        id : 0,\r\n        info : {},\r\n        firstUser : false\r\n    };\r\n    users = {};\r\n    userlist = [];\r\n    dices = [];\r\n    rolls = [];\r\n    status = DicePusherStatus.SETUP;\r\n    network = null;\r\n\r\n    constructor(settings) {\r\n        this.setupListeners();\r\n        this.network = new Network(settings.network || {});\r\n        this.status = DicePusherStatus.READY;\r\n        this.updated();\r\n    }\r\n\r\n    joinRoom(room, name) {\r\n        this.room = this.network.connect(room, name);\r\n    }\r\n\r\n    leaveRoom() {\r\n        this.network.disconnect();\r\n    }\r\n\r\n    roll(dice) {\r\n        dice = dice || 0;\r\n        if (this.dices[dice] === this.self.id) {\r\n            // allowed to roll\r\n            let eyes = Math.floor(Math.random() * 6) + 1;\r\n            // get the next user\r\n            let i = 0;\r\n            for (; i < this.userlist.length; i++) {\r\n                if (this.userlist[i].id === this.self.id) {\r\n                    break;\r\n                }\r\n            }\r\n            i++;\r\n            if (i >= this.userlist.length) {\r\n                i = 0;\r\n            }\r\n\r\n            this.network.send(ClientEvent.ROLL_DICE, {\r\n                dice : dice,\r\n                eyes : eyes,\r\n                next : this.userlist[i].id\r\n            }, this.self.id);\r\n            return eyes;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    addDice() {\r\n        this.dices.push(this.self.id);\r\n        this.sendDiceInfo();\r\n        this.updated();\r\n        return this.self.id;\r\n    }\r\n\r\n    canRoll() {\r\n        let availableDices = [];\r\n        for (let i = 0; i < this.dices.length; i++) {\r\n            if (this.dices[i] === this.self.id){\r\n                availableDices.push(i);\r\n            }\r\n        }\r\n        return availableDices;\r\n    }\r\n\r\n    sendDiceInfo() {\r\n        this.network.send(ClientEvent.DICE_INFO, {\r\n            dices : this.dices.slice()\r\n        });\r\n    }\r\n\r\n    updateUserList() {\r\n        this.userlist.length = 0;\r\n        for (let id in this.users) {\r\n            this.userlist.push(this.users[id]);\r\n        }\r\n        this.userlist.sort((a, b) => {\r\n            if (a.id > b.id) {\r\n                return 1;\r\n            }\r\n            if (a.id < b.id) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        this.updated();\r\n    }\r\n\r\n    updated() {\r\n        // Send a generic update event for ui frameworks\r\n        document.body.dispatchEvent(new Event(\"dice-pusher-updated\"));\r\n    }\r\n\r\n    setupListeners() {\r\n        window.addEventListener(\"beforeunload\", () => {\r\n            this.leaveRoom();\r\n            return null;\r\n        });\r\n\r\n        EventHub.listen(NetworkEvent.NETWORK_CONNECTED, () => {\r\n            this.status = DicePusherStatus.CONNECTING;\r\n            this.updated();\r\n        });\r\n        EventHub.listen(NetworkEvent.NETWORK_DISCONNECTED, () => {\r\n            this.status = DicePusherStatus.READY;\r\n            this.updated();\r\n        });\r\n        EventHub.listen(NetworkEvent.NETWORK_FAILED, () => {\r\n            this.status = DicePusherStatus.ERROR;\r\n            this.updated();\r\n        });\r\n        EventHub.listen(NetworkEvent.NETWORK_UNAVAILABLE, () => {\r\n            this.status = DicePusherStatus.ERROR;\r\n            this.updated();\r\n        });\r\n\r\n\r\n        EventHub.listen(DiceEvent.ROOM_ENTERED, (data) => {\r\n            this.status = DicePusherStatus.CONNECTED;\r\n            if (data.me) {\r\n                this.self = data.me;\r\n            }\r\n            if (data.members) {\r\n                this.users = {};\r\n                for (let id in data.members) {\r\n                    this.users[id] = data.members[id] || {};\r\n                    this.users[id].id = id;\r\n                }\r\n            }\r\n            this.updateUserList();\r\n\r\n            if (this.userlist.length === 1) {\r\n                // first user\r\n                this.self.firstUser = true;\r\n                this.dices = [this.self.id];\r\n            }\r\n\r\n            this.forwardEvent(DiceEvent.ROOM_ENTERED, this.users);\r\n        });\r\n        EventHub.listen(DiceEvent.ROOM_USER_JOIN, (data) => {\r\n            this.users[data.id] = data.info;\r\n            this.users[data.id].id = data.id;\r\n\r\n            // The first user in the current user list will send the recent dice list\r\n            if (this.self.id === this.userlist[0].id) {\r\n                this.sendDiceInfo();\r\n            }\r\n\r\n            this.updateUserList();\r\n            this.forwardEvent(DiceEvent.ROOM_USER_JOIN, this.users);\r\n        });\r\n        EventHub.listen(DiceEvent.ROOM_USER_LEAVE, (data) => {\r\n            delete this.users[data.id];\r\n            \r\n            if (this.userlist.length === 1) {\r\n                // last remaining user becomes first user\r\n                this.firstUser = true;\r\n            }\r\n            \r\n            this.updateUserList();\r\n            this.forwardEvent(DiceEvent.ROOM_USER_LEAVE, this.users);\r\n        });\r\n\r\n        EventHub.listen(ClientEvent.DICE_INFO, (data) => {\r\n            this.dices = data.dices.slice();\r\n            this.updated();\r\n            this.forwardEvent(ClientEvent.DICE_INFO, data);\r\n        });\r\n\r\n        EventHub.listen(ClientEvent.ROLL_DICE, (data) => {\r\n            this.rolls.push(data);\r\n            this.dices[data.dice] = data.next;\r\n            this.updated();\r\n            this.forwardEvent(ClientEvent.ROLL_DICE, data);\r\n        });\r\n    }\r\n\r\n    forwardEvent(event, data) {\r\n        // forward the event to document.body\r\n        if (!document.body) {\r\n            return;\r\n        }\r\n        document.body.dispatchEvent(new Event(symbolToString(event), data))\r\n    }\r\n}\r\n\r\nexport const DicePusherStatus = Object.freeze({\r\n    // The initial status at start up\r\n    SETUP : Symbol(\"setup\"),\r\n    // The status once everything is ready to join a room\r\n    READY : Symbol(\"ready\"),\r\n    // The status while trying to enter a room\r\n    CONNECTING : Symbol(\"connecting\"),\r\n    // The status once inside a room\r\n    CONNECTED : Symbol(\"connected\"),\r\n    // The status entered if there is a problem\r\n    ERROR : Symbol(\"error\")\r\n});","<script>\r\n    export let type = 'primary';\r\n    export let flat = true;\r\n    export let inverse = false;\r\n\r\n\r\n</script>\r\n\r\n<button class={type} class:flat={flat} class:inverse={inverse} on:click>\r\n    <slot></slot>\r\n</button>\r\n\r\n<style>\r\n    button{\r\n        border: 0;\r\n        cursor: pointer;\r\n        border-radius: 6px;\r\n        padding: 8px, 12px;\r\n        font-weight: bold;\r\n        box-shadow: 1px 2px 3px rgb(0, 0, 0, 0.5);\r\n\r\n    }\r\n\r\n    .primary{\r\n        background: #d91b42;\r\n        color: white;\r\n    }\r\n\r\n    .secondary{\r\n        background: #45c496;\r\n        color: white;\r\n    }\r\n\r\n    .flat{\r\n        box-shadow: none;\r\n    }\r\n\r\n    .primary.inverse{\r\n        color: #d91b42;\r\n        background: white;\r\n        border: 2px solid #d91b42;\r\n    }\r\n\r\n    .secondary.inverse{\r\n        color: #00CA75;\r\n        background-color: white;\r\n        border: 2px solid #00CA75;\r\n    }\r\n\r\n\r\n</style>","<script>\r\n    import {createEventDispatcher} from 'svelte';\r\n    import Button from '../../shared/Button.svelte';\r\n\r\n    let dispatch = createEventDispatcher();\r\n    export let credentials = {roomName:'' , playerName:''};\r\n\r\n    let errorMessage ='';\r\n    let errorMessageName ='';\r\n\r\n    let valid = false;\r\n    const submitHandler = () => {\r\n        valid = true;\r\n\r\n        if(credentials.roomName.trim().length < 3){\r\n            errorMessage = 'Der Raum name ist zu kurz...';\r\n            valid = false;\r\n        }\r\n        if(credentials.playerName.trim().length < 1){\r\n            errorMessageName = 'Hast du keinen Namen?'\r\n            valid = false;\r\n        }\r\n        if(valid){\r\n            errorMessage = '';\r\n            dispatch('joinRoom', credentials);\r\n        }\r\n    };\r\n\r\n</script>\r\n<h3>Willkommen beim Accso Wichtelgewusel</h3>\r\n\r\n<div on:submit>\r\n    <form on:submit|preventDefault={submitHandler}>\r\n        <div class=\"join\">\r\n            <label for=\"room-id\">Raum</label>\r\n            <input type=\"text\" placeholder=\"Fancy-room-name\" bind:value={credentials.roomName}>\r\n            <div class=\"error\">{ errorMessage }</div>\r\n\r\n            <label for=\"room-id\">Dein Name</label>\r\n            <input type=\"text\" placeholder=\"Dicey McDiceface\" bind:value={credentials.playerName}>\r\n            <div class=\"error\">{ errorMessageName }</div>\r\n            <br>\r\n            <Button  type=\"secondary\">Tritt ein</Button>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<style>\r\n    label{\r\n        padding: 10px;\r\n    }\r\n    input{\r\n        padding: 10px;\r\n\r\n    }\r\n    .error{\r\n        font-size: smaller;\r\n        font-weight: bold;\r\n        color: crimson;\r\n    }\r\n</style>","<script>\n//\texport let name;\n\timport { DicePusher} from \"./pusher/dicepusher.js\";\n\timport { DicePusherStatus } from \"./pusher/dicepusher.js\";\n\timport Card from './shared/Card.svelte';\n\timport Header from './components/Header.svelte';\n\timport Footer from './components/Footer.svelte';\n\timport Error from './components/status/Error.svelte';\n\timport Setup from './components/status/Setup.svelte';\n\timport Join from './components/status/Join.svelte';\n\timport Button from './shared/Button.svelte';\n\timport { EventHub } from \"./pusher/eventhub.js\";\n\timport { ClientEvent, DiceEvent } from \"./pusher/events.js\";\n\n\t$: dicepusher = new DicePusher({\n            network: {\n                authEndpoint : \"http://gheist.net/api/pusher/auth/generic/presence/1098358\",\n                appKey : \"d209ebf4ad2e3647739c\"\n            }\n\t\t});\t\n\n\t$: lastRolls = [1];\n\t$: blockedDice = [];\t\n\t$: playerList = [];\n\n\tlet credentials = {roomName:'' , playerName:''};\n\tdocument.body.addEventListener('dice-pusher-updated', () => {\n\t\tdicepusher = dicepusher;\n\t\tconsole.log(\"Updated DicePusher\")\n\t\tconsole.log(\"Users: \" );\n\t});\n\n\tEventHub.listen(ClientEvent.ROLL_DICE, (roll) =>{\n\t\tlastRolls[roll.dice] = roll.eyes;\n\t\tconsole.log(\"Last Rolls: \" + lastRolls);\n\t\tblockedDice[roll.dice] = true;\n\t\twindow.setTimeout(() =>{\n\t\t\tblockedDice[roll.dice] = false;\n\t\t}, 2500);\n\t});\n\n\tEventHub.listen(DiceEvent.ROOM_USER_JOIN, (user) =>{\n\t\tconsole.log(\"User Joined Room: \" + user.info.name);\n\t\tconsole.log(\"Current users: \");\n\t\tlogEvent(user.info.name + \" ist dem Raum beigetreten\")\n\t\tplayerList = [];\n\t\tdicepusher.userlist.map((user) => {\n\t\t\tlet tmp = {};\n\t\t\ttmp.id = user.id; \n\t\t\ttmp.name = user.name || \"anonymous?\";\n\t\t\tplayerList.push(tmp);\n\t\t\tconsole.log(\"\\n\" + tmp.name)\n\t\t})\n\n\t\tlet newUser = {};\n\t\tnewUser.id = user.info.id;\n\t\tnewUser.name = user.info.name;\n\t\tplayerList.push(newUser);\n\t});\n\n\tEventHub.listen(DiceEvent.ROOM_USER_LEAVE, (user) =>{\n\t\tconsole.log(\"User Left Room: \" + user.info.name);\n\t});\n\n\t$: eventslog = [];\n\n\tconst logEvent = (s) => {\n\t\teventslog.unshift({id: eventslog.length, message: s});\n\t\teventslog = eventslog;\n\t\tconsole.log(eventslog);\n\t};\n\n\n\tconst joinHandler = (e) => {\n\t\tcredentials = e.detail;\n\t\tconsole.log(\"User \"+ credentials.playerName + \" is joining room \" + credentials.roomName);\n\t\tdicepusher.joinRoom(credentials.roomName, credentials.playerName);\n\t\tconsole.log(\"DicePusher: \" + dicepusher);\n\t};\n\n\tconst addDice = () => {\n\t\tdicepusher.addDice();\n\t\tlastRolls.push(1);\n\n\t};\n\n\t$: dices = dicepusher.dices.map((diceHolder, diceId) =>{\n\t\tlet tmp = {};\n\t\ttmp.id = diceId;\n\t\ttmp.user = dicepusher.users[diceHolder];\n\t\ttmp.yourTurn = false;\n\t\tif(tmp.user && tmp.user.id === dicepusher.self.id) {\n\t\t\ttmp.yourTurn = true;\n\t\t}\n\n\t\treturn tmp;\n\t});\n\n\n\tconst handleRoll = (diceId) => {\n\t\tlogEvent(\"click\");\n\t\tif(!blockedDice[diceId]){\n\t\t\tdicepusher.roll(diceId)\n\t\t}\n\t};\n</script>\n<Header/>\n\t<div class=\"setting\">\n\t\t{#if dicepusher.self.firstUser === true}\n\t\t\t<Button on:click={addDice}>Add Dice</Button>\n\t\t\t<br>\n\t\t{/if}\n\t</div>\n\t<div class=\"eventlog\">\n\t\t{#each eventslog as event}\t\n\t\t\t<span>\n\t\t\t\t{event.message}\n\t\t\t</span>\n\t\t{/each}\t\n\t</div>\n\n<main>\n\t<div class=\"gamearea\">\n\t{#if dicepusher.status ===  DicePusherStatus.SETUP}\n\t\t<Setup/>\n\t{:else if dicepusher.status ===  DicePusherStatus.ERROR}\n\t\t<Error/>\n\t{:else if dicepusher.status ===  DicePusherStatus.READY}\n\t\t<Join  on:joinRoom={joinHandler}/>\n\t{:else if dicepusher.status ===  DicePusherStatus.CONNECTED}\n\t\t<h3>Room {dicepusher.room}</h3>\n\t\t\t<div>\n\t\t\t\t{#each dices as die}\n\t\t\t\t<Card>\n\t\t\t\t\t<div class=\"diespace\">\n\t\t\t\t\t\t{#if die.yourTurn}\n\t\t\t\t\t\t\t<p><b>Du<br>bist dran!</b></p>\n\t\t\t\t\t\t\t<img src=\"../img/{lastRolls[die.id]||1}.gif\" alt=\"Dice\" on:click={() => handleRoll(die.id)} >\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<p>{die.user.name}<br>ist dran.</p>\n\t\t\t\t\t\t\t<img src=\"../img/{lastRolls[die.id]||1}.gif\" alt=\"Dice\" >\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</Card>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t<div>\n\t\t\t<br>\n\t\t\t<b>Spieler:innen</b><br>\n\t\t\t{#each dicepusher.userlist as player}\n\t\t\t\t{player.name}\n\t\t\t\t{#each dices as die}\n\t\t\t\t\t{#if die.user.id === player.id}\n\t\t\t\t\t\t&#x1f3b2;\n\t\t\t\t\t{/if}\n\t\t\t\t{/each}\n\t\t\t\t<br>\n\t\t\t{/each}\n\t\t</div>\n\t{/if}\n\t</div>\n\n</main>\n\n<Footer/>\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t\tborder-width: 2px;\n\t}\n\n\t.setting{\n\t\tposition: absolute;\n\t\ttop: 0.5em;\n\t\tleft: 0.5em;\n\t}\n\n\t.diespace{\n\t\tmax-width: 100px;\n\t}\n\n\t.gamearea{\n\t\tborder-width: 5px;\n\t\tborder-color: rgb(95, 95, 95);\n\t}\n\n\t.eventlog{\n\t\twhite-space: nowrap;\n\t\tbackground: #00CA7533;\n    border-width: thin;\n    border-color: darkgray;\n    margin-top: 0.25em;\n\t\toverflow: hidden;\n\t}\n\t.eventlog span{\n\t\tdisplay: inline-block;\n\t\tpadding: 0 0.5em;\n\t\tposition: relative;\n\t}\n\n\t.eventlog span::before{\n\t\tdisplay: inline-block;\n\t\tcontent: \"\\2744\";\n\t\tposition: absolute;\n\t\twidth: 1em;\n\t\ttext-align: center;\n\t\tleft: -0.5em;\n\t}\n\n\t.eventlog span:first-child::before{\n\t\tdisplay: none;\n\t}\n\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","component","createEventDispatcher","Error","get_current_component","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","EventHub","listeners","logEvents","console","log","String","ClientEvent","freeze","DICE_INFO","Symbol","ROLL_DICE","DiceEvent","ROOM_ENTERED","ROOM_USER_JOIN","ROOM_USER_LEAVE","NetworkEvent","NETWORK_CONNECTING","NETWORK_CONNECTED","NETWORK_UNAVAILABLE","NETWORK_FAILED","NETWORK_DISCONNECTED","symbolToString","symbol","tmp","substr","Network","authEndpoint","appKey","appCluster","settings","opt","injectPusher","script","pusherLibrary","head","window","Pusher","client","cluster","auth","params","connection","bind","handleConnectionError","handleConnectionStateChange","roomId","disconnect","initialize","toLowerCase","replace","channel","subscribe","trigger","error","eventName","metadata","sender","user_id","unsubscribe","subscribed","states","current","code","msg","DicePusher","id","info","firstUser","DicePusherStatus","SETUP","setupListeners","network","status","READY","updated","room","connect","dice","dices","self","eyes","floor","random","userlist","send","next","sendDiceInfo","availableDices","users","sort","body","dispatchEvent","Event","leaveRoom","CONNECTING","ERROR","CONNECTED","me","members","updateUserList","forwardEvent","rolls","flat","inverse","roomName","playerName","preventDefault","dispatch","credentials","errorMessage","errorMessageName","valid","trim","message","user","yourTurn","roll","lastRolls","blockedDice","setTimeout","logEvent","playerList","dicepusher","newUser","s","eventslog","unshift","handleRoll","diceId","diceHolder","joinRoom","addDice","die"],"mappings":"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"}